Протокол разрабатывается исходя из подхода "запрос-ответ", так как он очень хорошо подходит для задачи:
клиенты запрашивают какое-то действие с валютой, сервер ее выполняет.

Данные на сервере:
    Массив валют, где валюта это:
        Название валюты - 16 байта
        История курса валюты - N * 4 байта (каждое значение курса это 4 байта)

... - повторение описанных блоков выше.

Клиент и сервер обмениваются пакетами размера 508 байт (либо меньше, если размер сообщения небольшой).
В начале каждого пакета с запросом клиент передает <request_id: 4 байта> -- номер его сессии,
и при получении ответа от сервера обрабатывает только те пакеты, которые соответствуют этой сессии.
Сделано это для того, чтобы если пакет от сервера задержался и запрос от клиента был отправлен повторно,
ошибочно не учитывать уже невалидный пакет. Таким образом, пакеты с неправильным id игнорируются.
Перед отправкой ответа с сервера содержимое сообщения разбивается на пакеты по 508 байт.
В начало каждого записывается служебная информация:
<request_id: 4 байта><num_packets: 4 байта><packet_id: 4 байта> -- номер сессии, количество пакетов и порядковый номер текущего соответственно.
Клиент расставляет пришедшие пакеты в правильном порядке, при нехватке пакетов отправляет запрос заново с новым номером сессии.

Поддерживаемые типы запросов:
    0. Получение и вывод списка валют с котировками/изменениями
        Номер команды: 0.

        Клиент отправляет: "<номер команды: 4 байта>",

        Сервер отвечает:
        "<название валюты: 16 байт><текущий курс: 4 байта><есть ли предыдущий курс: 1 байт><абсолютное приращение: 4 байта><относительное приращение: 4 байта>"...,
        если предыдущего курса нет, то абсолютное и относительное значения равны нулям и игнорируются,
        относительное значение выражается в процентах и округляется до целых.
        Формулы:
        абсолютное = current - previous
        относительное = (current * 100.0) / previous

    1. Передача команды на добавление валюты
        Номер команды: 1.

        Клиент отправляет: "<номер команды: 4 байта><название валюты: 16 байт><текущий курс: 4 байта>",

        Сервер отвечает:
        "<успех запроса: 1 байт>",
        возвращает 1 если такой валюты еще не было, 0 если такая валюта была.

    2. Передача команды на удаление валюты
        Номер команды: 2.

        Клиент отправляет: "<номер команды: 4 байта><название валюты: 16 байт>",

        Сервер отвечает:
        "<успех запроса: 1 байт>",
        возвращает 1 если такая валюта была и была удалена успешно, 0 если такой валюты не было.

    3. Передача команды на добавление курса валюты
        Номер команды: 3.

        Клиент отправляет: "<номер команды: 4 байта><название валюты: 16 байт><новый курс: 4 байта>",

        Сервер отвечает:
        "<успех запроса: 1 байт>",
        возвращает 1 если успешно выставлен новый курс, 0 иначе.

    4. Получение истории котировок валюты
        Номер команды: 4.

        Клиент отправляет: "<номер команды: 4 байта><название валюты: 16 байт>",

        Сервер отвечает:
"<курс1: 4 байта><курс2: 4 байта>"...