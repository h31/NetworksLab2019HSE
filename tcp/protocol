Описание протокола PSTP.

Общение происходит посредством отправки клиентом request'а, на который сервер отправляет response. Если клиент отправляет request типа pstp_<request_type_here>_request, то от сервера он получает pstp_<request_type_here>_response.

#define TEXT_UNIT_SIZE 64

-----------------

Все request'ы имеют один и тот же заголовок (header): type (1 байт) | wallet_id (TEXT_UNIT_SIZE) | password (TEXT_UNIT_SIZE) | content_size (32)

	type (uint8_t) - тип request'а:

		RESERVED (значение 0) - не используется

		REGISTER (1) - запрос на регистрацию

		CHECK_LOGIN (2) - запрос на проверку комбинации логин\пароль

		GET_ALL_WALLETS (3) - запрос на получение id всех кошельков на сервере

		ACCOUNT_INFO (4) - запрос на получение количества денежных средств на аккаунте

		ASK_FOR_PAYMENT (5) - запрос на получение денежных средств от другого пользователя

		PAYMENT (6) - перевести денежные средства другому пользователю

		CONFIRM_PAYMENT (7) - подтвердить запрос на отправку денежных средств другому пользователю после его запроса

		GET_REQUESTS_FOR_PAYMENTS (8) - получить все запросы на отправку денежных средств

		PAYMENT_RESULTS (9) - получить результаты запросов на платежи

	wallet_id и password (char[TEXT_UNIT_SIZE] и char[TEXT_UNIT_SIZE]) - данные пользователя, от имени которого отправляется request

	content_size (uint32_t) - размер содержимого request'а

Единственный request, смысл заголовка которого отличается от остальных - request на регистрацию. Там значимым считается только пароль (его выбирает пользователь, а логин выдается сервером в response), поле wallet_id игнорируется.

-----------------

Все response также имеют одинаковый заголовок:

type (1 байт) | code (1) | content_size (32)

type (uint8_t) - тип request'а, на который послан этот response

code (uint8_t) - один из кодов ответа сервера:

	OK (значение 0) - все в порядке
 
	INVALID_PASSWORD (1) - в запросе указана неправильная комбинация логин\пароль

	UNSUPPORTED_REQUEST_TYPE (2) - в запросе указан несуществующий тип request'а

    	INVALID_CONTENT (3) - содержимое запроса некорректно с точки зрения логики или не соответствует протоколу

content_size (uint32_t) - размер содержимого request'а

-----------------

Описание содержимого структур пар request/response:

тип request'а - REGISTER (значение типа request'а - 1):
	
	содержимое request'а: отсутствует

	содержимое response: 

		wallet_id (char[TEXT_UNIT_SIZE]) - id кошелька, выданного пользователю, который отправил запрос на регистрацию.

	Комментарий: клиент посылает пароль, выбранный пользователем и получает id, который теперь пользователь должен использовать.

тип request'а - CHECK_LOGIN (2):
	
	содержимое request'а: отсутствует

	содержимое response: отсутствует

	Комментарий: логин и пароль, которые нужно проверить, содержатся в header'е. Ответ на проверку тоже содержится в header'е response (OK или INVALID_PASSWORD).

тип request'а - GET_ALL_WALLETS (3):
	
	содержимое request'а: отсутствует

	содержимое response:

		num_of_accounts (uint32_t) - количество кошельков
		
		requests ({char[]'\0'}[num_of_accounts]) - сами кошельки, которые задаются своими wallet_id

	Комментарий: wallet_id в данном случае имеет размер не TEXT_UNIT_SIZE, а равный количеству значащих символов (тех, которые идут перед конечными '\0'). Сделано так для экономии, потому что количество кошельков может быть большим.

тип request'а - ACCOUNT_INFO (4):
	
	содержимое request'а: отсутствует

	содержимое response: 
		
		money_amount (uint64_t) - количество денежных средств на аккаунте пользователя, от имени которого отправлялся request

	Комментарий: -

тип request'а - ASK_FOR_PAYMENT (5):
	
	содержимое request'а: 

		amount (uint64_t) - сумма, которую мы хотим получить (строго больше 0)

		recipient_id (char[TEXT_UNIT_SIZE]) - id пользователя, у которого мы хотим попросить денежные средства (получатель нашего запроса)

	содержимое response: отсутствует

	Комментарий: пользователь отправляет запрос и получает response, в котором сказано, будет ли обработан его запрос (OK) или нет.

тип request'а - PAYMENT (6):
	
	содержимое request'а: 

		amount (uint64_t) - сумма, которую мы хотим отправить

		recipient_id (char[TEXT_UNIT_SIZE]) - id пользователя, которому мы хотим отправить денежные средства (получатель нашего запроса)

	содержимое response: отсутствует

	Комментарий: пользователь отправляет запрос и получает response, в котором сказано, совершен ли платеж (OK) или нет.

тип request'а - CONFIRM_PAYMENT (7):
	
	содержимое request'а: 

		amount (uint64_t) - сумма, которую мы подтверждаем (или 0, если мы хотим отвергнуть запрос)

		recipient_id (char[TEXT_UNIT_SIZE]) - id пользователя, который у нас запросил денежные средства

	содержимое response: отсутствует

	Комментарий: пользователь отправляет подтверждение и получает response, в котором сказано, обработан (отвергнут или подтвержден) ли запрос (OK) или нет. 

тип request'а - GET_REQUESTS_FOR_PAYMENTS (8):
	
	содержимое request'а: отсутствует

	содержимое response:

		num_of_requests (uint32_t) - количество необработанных request'ов
		
		requests ({char[]'\0', uint64_t}[num_of_request]) - сами request'ы, состоящие из wallet_id и суммы, запрошенной пользователем с этим wallet_id.

	Комментарий: Так же, как и в GET_ALL_WALLETS, размер wallet_id не равен TEXT_UNIT_SIZE для экономии. 

тип request'а - PAYMENT_RESULTS (9):
	
	содержимое request'а: отсутствует

	содержимое response: 

		num_of_results (uint32_t) - количество непрочитанных результатов
		
		requests ({char[]'\0', uint64_t}[num_of_request]) - сами результаты: wallet_id пользователя, которому мы направляли запрос, и amount, который он нам заплатил (0, если он отверг запрос)

	Комментарий: Так же, как и в GET_ALL_WALLETS, размер wallet_id не равен TEXT_UNIT_SIZE для экономии.





















